version: '2.3'
services:
  # # nginx set up
  # nginx-web:
  #   image: nginx
  #   labels:
  #     com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  #   container_name: nginx-web
  #   restart: unless-stopped
  #   ports:
  #     - '5080:80'
  #     - '5443:443'
  #   volumes:
  #     - ${NGINX_PATH}/conf.d:/etc/nginx/conf.d
  #     - ${NGINX_PATH}/vhost.d:/etc/nginx/vhost.d
  #     - ${NGINX_PATH}/html:/etc/nginx/html
  #     - ${NGINX_PATH}/certs:/etc/nginx/certs:ro
  #     - ${NGINX_PATH}/htpasswd:/etc/nginx/htpasswd:ro
  # nginx-gen:
  #   image: jwilder/docker-gen
  #   command: -notify-sighup nginx-web -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  #   container_name: docker-gen
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   volumes_from:
  #     - nginx-web
  # nginx-letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: lets-encrypt
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   volumes_from:
  #     - nginx-web
  #   environment:
  #     NGINX_DOCKER_GEN_CONTAINER: docker-gen
  #     NGINX_PROXY_CONTAINER: nginx-web

  # app set up
  db:
    image: postgres
  ruby:
    build: ./rails-api
    command: bundle exec rails s -p 3002 -b '0.0.0.0'
    volumes:
      - ./rails-api:/rails
    ports:
      - '3002:3002'
    depends_on:
      - db
  express:
    build: ./express
    ports:
      - '3001:3001'
    volumes:
      - ./express:/express
  react:
    build: ./react
    ports:
      - '3000:3000'
    volumes:
      - ./react:/client/
      - /client/node_modules
